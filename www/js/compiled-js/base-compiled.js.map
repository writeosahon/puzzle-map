{"version":3,"sources":["base.js"],"names":[],"mappings":";;;;;;AAAA;;;;AAIA;;;;;;;;;AAUA;AACA,IAAM,+BAA+B,QAArC;;AAEA;;;;AAIA,IAAM,qCACD,4BADC,EAC8B;;AAE5B;;;AAGA,kBAAc;;AAEV;;;;AAIM,4BANI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCASW,eAAe,4BAAf,EAA6C,KAA7C,CAAmD,WAAnD,CAA+D,GAA/D,CAAmE,cAAnE,CATX;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAgBV;;;;;AAKM,4BArBI;AAAA,kGAqBiB,YArBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCA0BgC,eAAe,4BAAf,EAA6C,oBAA7C,EA1BhC;;AAAA;AA0BM,iDA1BN;;AA2BE;AACA,6CAAa,IAAb,GAAoB,kBAAkB,IAAtC;AA5BF;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uCAgCW,eAAe,4BAAf,EAA6C,KAA7C,CAAmD,WAAnD,CAA+D,GAA/D,CAAmE,YAAnE,CAhCX;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AALc,CAD9B,CAAN","file":"base-compiled.js","sourcesContent":["/**\n * Created by UTOPIA SOFTWARE on 5/10/2018.\n */\n\n/**\n * file provides the \"base\" framework/utilities required to launch the app.\n * E.g. - File creates the base namespace which the app is built on.\n * - Loads all the ES moddule libraries required etc\n *\n * The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\n * also used interchangeably\n **/\n\n\n// constant that defines the app namespace\nconst utopiasoftware_app_namespace = 'puzzle';\n\n/**\n * create the namespace and base methods and properties for the app\n * @type {{}}\n */\nconst utopiasoftware = {\n    [utopiasoftware_app_namespace]: {\n\n        /**\n         * object is responsible for handling operations on the \"game settings\" data\n         */\n        gameSettings: {\n\n            /**\n             * method loads the game settings data from the app database\n             * @returns {Promise<void>}\n             */\n            async loadGameSettingsData(){\n\n                try{\n                    return await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.get(\"gameSettings\");\n                }\n                finally{\n                }\n            },\n\n\n            /**\n             * method is used to save the game settings data to the app database\n             * @param gameSettings\n             * @returns {Promise<void>}\n             */\n            async saveGameSettingsData(gameSettings){\n\n                try{\n\n                    try{\n                        let previousSavedData = await utopiasoftware[utopiasoftware_app_namespace].loadGameSettingsData();\n                        // get the last _rev property that was used to save the game settings data\n                        gameSettings._rev = previousSavedData._rev;\n                    }\n                    catch(err){}\n\n                    return await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.put(gameSettings);\n                }\n                finally{\n                }\n            }\n        }\n\n    }\n};\n"]}